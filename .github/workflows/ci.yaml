---
name: application-operator build and push 

on: 
  push:
    branches:
      - main

env:
  BUILD_DATE: $(date +'%Y%m%d-%H%M%S')
  
jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: Run ShellCheck
        run: |
          find . -type f -name '*.sh' -exec shellcheck {} +

  Build-and-Push:
    name: Build and Push to registry
    runs-on: ubuntu-latest
    steps:
      - name: check out the repo
        uses: actions/checkout@v4
      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - name: Build and push to quay
        env:
          REGISTRY_NAMESPACE: ${{ vars.REGISTRY_NAMESPACE }}
          IMAGE_TAG: release-${{ steps.date.outputs.date }}
          IMAGE_TAG_SHA: ${{ github.ref_name }}-${{ github.sha }}
          IMAGE_BUILD_CMD: docker
        run: |
          # Use IMAGE_TAG if set, otherwise use IMAGE_TAG_SHA
          if [ -z "$IMAGE_TAG" ]; then
            export IMAGE_TAG="$IMAGE_TAG_SHA"
          fi
          make docker-build docker-push IMG=quay.io/${REGISTRY_NAMESPACE}/application-operator:${IMAGE_TAG}

  # test:
  #   name: Go Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.22'
  #     - name: Run Go tests
  #       run: |
  #         go test ./...

  # lint:
  #   name: Go Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.22'
  #     - name: Install golangci-lint
  #       run: |
  #         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.59.1
  #     - name: Run golangci-lint
  #       run: |
  #         $(go env GOPATH)/bin/golangci-lint run ./...

